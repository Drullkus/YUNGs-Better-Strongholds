plugins {
    id 'fabric-loom' version '0.5-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = "${project.minecraft_version}-${project.mod_version}"
group = project.maven_group

minecraft {
//    accessWidener = file("src/main/resources/betterstrongholds.aw")
}

repositories {
    maven { url 'https://maven.fabricmc.net/io/github/prospector/modmenu/' }
    maven {
        name "cotton-config"
        url 'http://server.bbkr.space:8081/artifactory/libs-release'
    }
    maven { url "https://maven.fabricmc.net" }
    maven { url "https://maven.shedaniel.me/" }
    mavenCentral()
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Cloth - API
    modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
        transitive = false
    }
    // Auto Config - embedded
//    modImplementation "me.sargunvohra.mcmods:autoconfig1u:${project.auto_config_version}"
//    include "me.sargunvohra.mcmods:autoconfig1u:${project.auto_config_version}"

    // ModMenu - optional
    modImplementation("io.github.prospector:modmenu:${project.mod_menu_version}") {
        transitive = false
    }

    // YUNG's API - required dependency
    modImplementation ("com.yungnickyoung.minecraft.yungsapi:YungsApi:${project.yungs_api_version}") {
        transitive = false
    }
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}